//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tripod {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tripod.Api.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} is not a valid credit card number..
        /// </summary>
        public static string CreditCardError {
            get {
                return ResourceManager.GetString("CreditCardError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} is not a valid email address..
        /// </summary>
        public static string email_error {
            get {
                return ResourceManager.GetString("email_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} should be equal to &apos;{ComparisonValue}&apos;..
        /// </summary>
        public static string equal_error {
            get {
                return ResourceManager.GetString("equal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be {MaxLength} characters in length. You entered {TotalLength} characters..
        /// </summary>
        public static string exact_length_error {
            get {
                return ResourceManager.GetString("exact_length_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be null or empty..
        /// </summary>
        public static string Exception_Argument_CannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("Exception_Argument_CannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be less than one..
        /// </summary>
        public static string Exception_ArgumentOutOfRange_CannotBeLessThanOne {
            get {
                return ResourceManager.GetString("Exception_ArgumentOutOfRange_CannotBeLessThanOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} &apos;{1}&apos; does not exist.
        /// </summary>
        public static string Exception_InvalidOperation_DoesNotExist {
            get {
                return ResourceManager.GetString("Exception_InvalidOperation_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be between {From} and {To} (exclusive). You entered {Value}..
        /// </summary>
        public static string exclusivebetween_error {
            get {
                return ResourceManager.GetString("exclusivebetween_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be greater than &apos;{ComparisonValue}&apos;..
        /// </summary>
        public static string greaterthan_error {
            get {
                return ResourceManager.GetString("greaterthan_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be greater than or equal to &apos;{ComparisonValue}&apos;..
        /// </summary>
        public static string greaterthanorequal_error {
            get {
                return ResourceManager.GetString("greaterthanorequal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be between {From} and {To}. You entered {Value}..
        /// </summary>
        public static string inclusivebetween_error {
            get {
                return ResourceManager.GetString("inclusivebetween_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be between {MinLength} and {MaxLength} characters. You entered {TotalLength} characters..
        /// </summary>
        public static string length_error {
            get {
                return ResourceManager.GetString("length_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be less than &apos;{ComparisonValue}&apos;..
        /// </summary>
        public static string lessthan_error {
            get {
                return ResourceManager.GetString("lessthan_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be less than or equal to &apos;{ComparisonValue}&apos;..
        /// </summary>
        public static string lessthanorequal_error {
            get {
                return ResourceManager.GetString("lessthanorequal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} is required..
        /// </summary>
        public static string notempty_error {
            get {
                return ResourceManager.GetString("notempty_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} should not be equal to &apos;{ComparisonValue}&apos;..
        /// </summary>
        public static string notequal_error {
            get {
                return ResourceManager.GetString("notequal_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} is required..
        /// </summary>
        public static string notnull_error {
            get {
                return ResourceManager.GetString("notnull_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified condition was not met for {PropertyName}..
        /// </summary>
        public static string predicate_error {
            get {
                return ResourceManager.GetString("predicate_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} is not in the correct format..
        /// </summary>
        public static string regex_error {
            get {
                return ResourceManager.GetString("regex_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} may not be more than {expectedPrecision} digits in total, with allowance for {expectedScale} decimals. {digits} digits and {actualScale} decimals were found..
        /// </summary>
        public static string scale_precision_error {
            get {
                return ResourceManager.GetString("scale_precision_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} &apos;{PropertyValue}&apos; already exists..
        /// </summary>
        public static string Validation_AlreadyExists {
            get {
                return ResourceManager.GetString("Validation_AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} cannot exceed {MaxLength} characters. You entered {TotalLength} characters..
        /// </summary>
        public static string Validation_MaxLength {
            get {
                return ResourceManager.GetString("Validation_MaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must contain at least {MinLength} characters. You entered {TotalLength} characters..
        /// </summary>
        public static string Validation_MinLength {
            get {
                return ResourceManager.GetString("Validation_MinLength", resourceCulture);
            }
        }
    }
}
