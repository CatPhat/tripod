//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Tripod.Ioc.EntityFramework.EntityDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets7dcbd53ce5882e0e43365c556945dbafb63b07561d8262b094390e04057869e9))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets7dcbd53ce5882e0e43365c556945dbafb63b07561d8262b094390e04057869e9 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "7dcbd53ce5882e0e43365c556945dbafb63b07561d8262b094390e04057869e9"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.User")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Permission")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.UserPermission")
            {
                return GetView2();
            }

            if (extentName == "EntityDbContext.Users")
            {
                return GetView3();
            }

            if (extentName == "EntityDbContext.Permissions")
            {
                return GetView4();
            }

            if (extentName == "EntityDbContext.User_Permissions")
            {
                return GetView5();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User
        [CodeFirstDatabaseSchema.User](T1.User_Id, T1.User_Name)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Name AS User_Name, 
            True AS _from0
        FROM EntityDbContext.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Permission.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Permission
        [CodeFirstDatabaseSchema.Permission](T1.Permission_Id, T1.Permission_Name, T1.Permission_Description)
    FROM (
        SELECT 
            T.Id AS Permission_Id, 
            T.Name AS Permission_Name, 
            T.Description AS Permission_Description, 
            True AS _from0
        FROM EntityDbContext.Permissions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.UserPermission.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserPermission
        [CodeFirstDatabaseSchema.UserPermission](T1.UserPermission_UserId, T1.UserPermission_RoleId)
    FROM (
        SELECT 
            Key(T.User_Permissions_Source).Id AS UserPermission_UserId, 
            Key(T.User_Permissions_Target).Id AS UserPermission_RoleId, 
            True AS _from0
        FROM EntityDbContext.User_Permissions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EntityDbContext.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [Tripod.Ioc.EntityFramework.User](T1.User_Id, T1.User_Name)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Name AS User_Name, 
            True AS _from0
        FROM CodeFirstDatabase.User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EntityDbContext.Permissions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Permissions
        [Tripod.Ioc.EntityFramework.Permission](T1.Permission_Id, T1.Permission_Name, T1.Permission_Description)
    FROM (
        SELECT 
            T.Id AS Permission_Id, 
            T.Name AS Permission_Name, 
            T.Description AS Permission_Description, 
            True AS _from0
        FROM CodeFirstDatabase.Permission AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EntityDbContext.User_Permissions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User_Permissions
        [Tripod.Ioc.EntityFramework.User_Permissions](T3.[User_Permissions.User_Permissions_Source], T3.[User_Permissions.User_Permissions_Target])
    FROM (
        SELECT -- Constructing User_Permissions_Source
            CreateRef(EntityDbContext.Users, row(T2.[User_Permissions.User_Permissions_Source.Id]), [Tripod.Ioc.EntityFramework.User]) AS [User_Permissions.User_Permissions_Source], 
            T2.[User_Permissions.User_Permissions_Target]
        FROM (
            SELECT -- Constructing User_Permissions_Target
                T1.[User_Permissions.User_Permissions_Source.Id], 
                CreateRef(EntityDbContext.Permissions, row(T1.[User_Permissions.User_Permissions_Target.Id]), [Tripod.Ioc.EntityFramework.Permission]) AS [User_Permissions.User_Permissions_Target]
            FROM (
                SELECT 
                    T.UserId AS [User_Permissions.User_Permissions_Source.Id], 
                    T.RoleId AS [User_Permissions.User_Permissions_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserPermission AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
