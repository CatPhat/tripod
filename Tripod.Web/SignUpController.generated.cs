// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Tripod.Web.Controllers
{
    public partial class SignUpController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SignUpController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ViewResult SendConfirmationEmail()
        {
            return new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.SendConfirmationEmail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateSendConfirmationEmail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateSendConfirmationEmail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyConfirmEmailSecret()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyConfirmEmailSecret);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateVerifyConfirmEmailSecret()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateVerifyConfirmEmailSecret);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> CreateLocalMembership()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateLocalMembership);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateCreateLocalMembership()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateCreateLocalMembership);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SignUpController Actions { get { return MVC.SignUp; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "SignUp";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "SignUp";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string SendConfirmationEmail = "SendConfirmationEmail";
            public readonly string ValidateSendConfirmationEmail = "ValidateSendConfirmationEmail";
            public readonly string VerifyConfirmEmailSecret = "VerifyConfirmEmailSecret";
            public readonly string ValidateVerifyConfirmEmailSecret = "ValidateVerifyConfirmEmailSecret";
            public readonly string CreateLocalMembership = "CreateLocalMembership";
            public readonly string ValidateCreateLocalMembership = "ValidateCreateLocalMembership";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string SendConfirmationEmail = "SendConfirmationEmail";
            public const string ValidateSendConfirmationEmail = "ValidateSendConfirmationEmail";
            public const string VerifyConfirmEmailSecret = "VerifyConfirmEmailSecret";
            public const string ValidateVerifyConfirmEmailSecret = "ValidateVerifyConfirmEmailSecret";
            public const string CreateLocalMembership = "CreateLocalMembership";
            public const string ValidateCreateLocalMembership = "ValidateCreateLocalMembership";
        }


        static readonly ActionParamsClass_SendConfirmationEmail s_params_SendConfirmationEmail = new ActionParamsClass_SendConfirmationEmail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendConfirmationEmail SendConfirmationEmailParams { get { return s_params_SendConfirmationEmail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendConfirmationEmail
        {
            public readonly string returnUrl = "returnUrl";
            public readonly string command = "command";
            public readonly string loginProvider = "loginProvider";
        }
        static readonly ActionParamsClass_ValidateSendConfirmationEmail s_params_ValidateSendConfirmationEmail = new ActionParamsClass_ValidateSendConfirmationEmail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateSendConfirmationEmail ValidateSendConfirmationEmailParams { get { return s_params_ValidateSendConfirmationEmail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateSendConfirmationEmail
        {
            public readonly string command = "command";
            public readonly string fieldName = "fieldName";
        }
        static readonly ActionParamsClass_VerifyConfirmEmailSecret s_params_VerifyConfirmEmailSecret = new ActionParamsClass_VerifyConfirmEmailSecret();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VerifyConfirmEmailSecret VerifyConfirmEmailSecretParams { get { return s_params_VerifyConfirmEmailSecret; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VerifyConfirmEmailSecret
        {
            public readonly string ticket = "ticket";
            public readonly string returnUrl = "returnUrl";
            public readonly string command = "command";
            public readonly string emailAddress = "emailAddress";
        }
        static readonly ActionParamsClass_ValidateVerifyConfirmEmailSecret s_params_ValidateVerifyConfirmEmailSecret = new ActionParamsClass_ValidateVerifyConfirmEmailSecret();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateVerifyConfirmEmailSecret ValidateVerifyConfirmEmailSecretParams { get { return s_params_ValidateVerifyConfirmEmailSecret; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateVerifyConfirmEmailSecret
        {
            public readonly string command = "command";
            public readonly string fieldName = "fieldName";
        }
        static readonly ActionParamsClass_CreateLocalMembership s_params_CreateLocalMembership = new ActionParamsClass_CreateLocalMembership();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateLocalMembership CreateLocalMembershipParams { get { return s_params_CreateLocalMembership; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateLocalMembership
        {
            public readonly string token = "token";
            public readonly string returnUrl = "returnUrl";
            public readonly string command = "command";
            public readonly string emailAddress = "emailAddress";
        }
        static readonly ActionParamsClass_ValidateCreateLocalMembership s_params_ValidateCreateLocalMembership = new ActionParamsClass_ValidateCreateLocalMembership();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateCreateLocalMembership ValidateCreateLocalMembershipParams { get { return s_params_ValidateCreateLocalMembership; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateCreateLocalMembership
        {
            public readonly string command = "command";
            public readonly string fieldName = "fieldName";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SignUpController : Tripod.Web.Controllers.SignUpController
    {
        public T4MVC_SignUpController() : base(Dummy.Instance) { }

        partial void SendConfirmationEmailOverride(T4MVC_System_Web_Mvc_ViewResult callInfo, string returnUrl);

        public override System.Web.Mvc.ViewResult SendConfirmationEmail(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.SendConfirmationEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            SendConfirmationEmailOverride(callInfo, returnUrl);
            return callInfo;
        }

        partial void SendConfirmationEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tripod.Domain.Security.SendConfirmationEmail command, string returnUrl, string loginProvider);

        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SendConfirmationEmail(Tripod.Domain.Security.SendConfirmationEmail command, string returnUrl, string loginProvider)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendConfirmationEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "loginProvider", loginProvider);
            SendConfirmationEmailOverride(callInfo, command, returnUrl, loginProvider);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        partial void ValidateSendConfirmationEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tripod.Domain.Security.SendConfirmationEmail command, string fieldName);

        public override System.Web.Mvc.ActionResult ValidateSendConfirmationEmail(Tripod.Domain.Security.SendConfirmationEmail command, string fieldName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateSendConfirmationEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldName", fieldName);
            ValidateSendConfirmationEmailOverride(callInfo, command, fieldName);
            return callInfo;
        }

        partial void VerifyConfirmEmailSecretOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ticket, string returnUrl);

        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyConfirmEmailSecret(string ticket, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyConfirmEmailSecret);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ticket", ticket);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            VerifyConfirmEmailSecretOverride(callInfo, ticket, returnUrl);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        partial void VerifyConfirmEmailSecretOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string ticket, Tripod.Domain.Security.VerifyConfirmEmailSecret command, string returnUrl, string emailAddress);

        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> VerifyConfirmEmailSecret(string ticket, Tripod.Domain.Security.VerifyConfirmEmailSecret command, string returnUrl, string emailAddress)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyConfirmEmailSecret);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ticket", ticket);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "emailAddress", emailAddress);
            VerifyConfirmEmailSecretOverride(callInfo, ticket, command, returnUrl, emailAddress);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        partial void ValidateVerifyConfirmEmailSecretOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tripod.Domain.Security.VerifyConfirmEmailSecret command, string fieldName);

        public override System.Web.Mvc.ActionResult ValidateVerifyConfirmEmailSecret(Tripod.Domain.Security.VerifyConfirmEmailSecret command, string fieldName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateVerifyConfirmEmailSecret);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldName", fieldName);
            ValidateVerifyConfirmEmailSecretOverride(callInfo, command, fieldName);
            return callInfo;
        }

        partial void CreateLocalMembershipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string token, string returnUrl);

        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> CreateLocalMembership(string token, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateLocalMembership);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "token", token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            CreateLocalMembershipOverride(callInfo, token, returnUrl);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        partial void CreateLocalMembershipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tripod.Domain.Security.CreateLocalMembership command, string returnUrl, string emailAddress);

        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> CreateLocalMembership(Tripod.Domain.Security.CreateLocalMembership command, string returnUrl, string emailAddress)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateLocalMembership);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "emailAddress", emailAddress);
            CreateLocalMembershipOverride(callInfo, command, returnUrl, emailAddress);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        partial void ValidateCreateLocalMembershipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Tripod.Domain.Security.CreateLocalMembership command, string fieldName);

        public override System.Web.Mvc.ActionResult ValidateCreateLocalMembership(Tripod.Domain.Security.CreateLocalMembership command, string fieldName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateCreateLocalMembership);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "command", command);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldName", fieldName);
            ValidateCreateLocalMembershipOverride(callInfo, command, fieldName);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
