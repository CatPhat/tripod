@using Tripod
@using Tripod.Domain.Security
@using UserConstraints = Tripod.Domain.Security.User.Constraints

@model SignIn
@{
    ViewBag.Title = "Sign in";
}

@section styles
{
    <link href="~/content/security/sign-in.css" rel="stylesheet" />
}

<hr class="hr-md hr-space" />
<div class="row">
    <div class="col-sm-8 col-sm-offset-2">

        @* HEADING *@
        <h2>@ViewBag.Title.</h2>

        @* OAUTH PROVIDER BUTTONS FORM *@
        <div class="providers row">
            <form action="@Url.Action(MVC.Authentication.ExternalLogin())" method="POST">

                @Html.AntiForgeryToken()

                <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />

                @* GOOGLE *@
                <div class="col-sm-4">
                    <p>
                        <button type="submit" name="provider" value="Google" title="Sign in with Google" class="google btn btn-lg">
                            <i></i>
                            <span class="hidden-md hidden-sm">Sign in with <strong>Google</strong></span>
                            <strong class="hidden-lg hidden-xs">Google</strong>
                        </button>
                    </p>
                </div>

                @* FACEBOOK *@
                <div class="col-sm-4">
                    <p>
                        <button type="submit" name="provider" value="Facebook" title="Sign in with Facebook" class="facebook btn btn-lg">
                            <i></i>
                            <span class="hidden-md hidden-sm">Sign in with <strong>Facebook</strong></span>
                            <strong class="hidden-lg hidden-xs">Facebook</strong>
                        </button>
                    </p>
                </div>

                @* TWITTER *@
                <div class="col-sm-4">
                    <p>
                        <button type="submit" name="provider" value="Twitter" title="Sign in with Twitter" class="twitter btn btn-lg">
                            <i></i>
                            <span class="hidden-md hidden-sm">Sign in with <strong>Twitter</strong></span>
                            <strong class="hidden-lg hidden-xs">Twitter</strong>
                        </button>
                    </p>
                </div>
            </form>
        </div>

        <hr class="hr-md hr-space" />
        <h4>
            Have an account? Sign in with your username or email address.
        </h4>

        <div ng-app="sign-in-form" ng-controller="App.Security.SignIn.Form.Controller">
            <form name="f" action="@Url.Action(MVC.Authentication.SignIn(null, null))" method="POST" class="form-horizontal" role="form"
                  novalidate form-helper="h" submit-attempted="@(!ViewData.ModelState.IsValid)">

                @Html.AntiForgeryToken()

                <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />

                @Html.ValidationSummary(true)
                @{
                    const string inputCss = "input-lg";
                    const string inputGroupCss = "input-group input-group-lg";
                }
                @* EMAIL ADDRESS INPUT *@
                <div class="form-group form-group-lg @Html.BootstrapValidationCssClassFor(x => x.UserName)"
                     remove-class="has-success has-error"
                     ng-class="{ 'has-success': h.userName.hasSuccess(), 'has-error': h.userName.hasError(), 'has-spinner': h.userName.hasSpinner() }">

                    @* INPUT GROUP COLUMN *@
                    <div class="col-md-8">
                        @* SR LABEL *@
                        <label for="@Html.IdFor(x => x.UserName)" class="control-label sr-only">
                            @UserConstraints.NameLabel or @EmailAddress.Constraints.Label
                        </label>
                        <div class="@Html.CssClassWhenInvalidFor(x => x.UserName, inputGroupCss)"
                             remove-class="@inputGroupCss"
                             ng-class="{ '@inputGroupCss': h.userName.hasFeedback() }">
                            <input type="text"
                                   class="form-control @inputCss"
                                   placeholder="@UserConstraints.NameLabel or @EmailAddress.Constraints.Label"
                                   id="@Html.IdFor(x => x.UserName)"
                                   name="userName"
                                   value="@Html.ValueFor(x => x.UserName)"
                                   ng-init="m.userName='@Html.ValueFor(x => x.UserName)'"
                                   ng-model="m.userName" required
                                   model-helper
                                   server-validate="@Url.Action(MVC.Authentication.SignInValidate(null, "userName"))"
                                   server-validate-throttle="200"
                                   server-validate-no-success="@(!IsPost)"
                                   server-error="@Html.ValidationMessageTextFor(x => x.UserName)" />

                            <span class="input-group-addon validation @Html.CssClassWhenValidFor(x => x.UserName, "hide")"
                                  remove-class="hide"
                                  ng-class="{ 'hide':  !h.userName.hasFeedback() }">
                                <i class="fa fa-fw fa-asterisk default" title="This is a required field"></i>
                                <i class="fa fa-fw fa-times error"></i>
                                <i class="fa fa-fw fa-spinner fa-spin spin-fast spinner"></i>
                                <i class="fa fa-fw fa-exclamation-triangle warning"></i>
                                <i class="fa fa-fw fa-check success"></i>
                            </span>
                        </div>
                    </div>

                    @* VALIDATION MESSAGES COLUMNS *@
                    <div class="col-md-4 validation help-block help-block-horizontal-md hidden-sm hidden-xs">
                        <span t3-popover="'@Resources.notempty_error.Replace("{PropertyName}", string.Format("{0} or {1}", UserConstraints.NameLabel, EmailAddress.Constraints.Label))'"
                              t3-popover-switch="h.userName.hasError() && f.userName.$error.required"
                              t3-popover-animation="false"
                              class="validation-popover"></span>

                        <span t3-popover="h.userName.serverError"
                              t3-popover-switch="h.userName.hasError() && f.userName.$error.server"
                              t3-popover-animation="false"
                              class="validation-popover"></span>

                        <span ng-class="{ hide: true }">@Html.ValidationMessageFor(x => x.UserName)</span>
                    </div>
                    <div class="col-md-4 validation help-block hidden-md hidden-lg">
                        <span ng-show="h.userName.hasError()" ng-cloak>
                            <span ng-show="f.userName.$error.required && !f.userName.$viewValue">
                                @Resources.notempty_error.Replace("{PropertyName}", string.Format("{0} or {1}", UserConstraints.NameLabel, EmailAddress.Constraints.Label))
                            </span>
                            <span ng-show="f.userName.$error.server">
                                {{ h.userName.serverError }}
                            </span>
                        </span>
                        <span ng-class="{ hide: true }">
                            @Html.ValidationMessageFor(x => x.UserName)
                        </span>
                    </div>
                </div>

                @* PASSWORD INPUT *@
                <div class="form-group form-group-lg @Html.BootstrapValidationCssClassFor(x => x.Password)"
                     remove-class="has-success has-error"
                     ng-class="{ 'has-error': h.password.hasError() }">

                    @* INPUT GROUP COLUMN *@
                    <div class="col-md-8">
                        @* SR LABEL *@
                        <label for="@Html.IdFor(x => x.Password)" class="control-label sr-only">
                            @LocalMembership.Constraints.PasswordLabel
                        </label>
                        <div class="@Html.CssClassWhenInvalidFor(x => x.Password, inputGroupCss)"
                             remove-class="@inputGroupCss"
                             ng-class="{ '@inputGroupCss': h.password.hasError() }">
                            <input type="password" class="form-control @inputCss" placeholder="@LocalMembership.Constraints.PasswordLabel"
                                   id="@Html.IdFor(x => x.Password)" name="password"
                                   ng-model="m.password" required model-helper
                                   server-error="@Html.ValidationMessageTextFor(x => x.Password)" />

                            <span class="input-group-addon validation @Html.CssClassWhenValidFor(x => x.Password, "hide")"
                                  remove-class="hide"
                                  ng-class="{ 'hide':  !h.password.hasError() }">
                                <i class="fa fa-fw fa-asterisk default" title="This is a required field"></i>
                                <i class="fa fa-fw fa-times error"></i>
                                <i class="fa fa-fw fa-exclamation-triangle warning"></i>
                                <i class="fa fa-fw fa-check success"></i>
                            </span>
                        </div>
                        <div class="help-block hidden-xs hidden-sm">
                            <a href="#">I forgot my password</a>
                        </div>
                    </div>

                    @* VALIDATION MESSAGES COLUMNS *@
                    <div class="col-md-4 validation help-block help-block-horizontal-md hidden-sm hidden-xs">
                        <span t3-popover="h.password.serverError"
                              t3-popover-switch="h.password.hasError() && f.password.$error.server"
                              t3-popover-animation="false"
                              class="validation-popover"></span>

                        <span t3-popover="'@Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.PasswordLabel)'"
                              t3-popover-switch="h.password.hasError() && f.password.$error.required"
                              t3-popover-animation="false"
                              class="validation-popover"></span>

                        <span ng-class="{ hide: true }">@Html.ValidationMessageFor(x => x.Password)</span>
                    </div>
                    <div class="col-md-4 validation help-block hidden-md hidden-lg">
                        <span ng-show="h.password.hasError()" ng-cloak>
                            <span ng-show="f.password.$error.required">
                                @Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.PasswordLabel)
                            </span>
                            <span ng-show="f.password.$error.server">
                                {{ h.password.serverError }}
                            </span>
                        </span>
                        <span ng-class="{ hide: true }">
                            @Html.ValidationMessageFor(x => x.Password)
                        </span>
                        <a href="#">I forgot my password</a>
                    </div>
                </div>

                @* REMEMBER ME CHECKBOX INPUT *@
                <div class="form-group">

                    @* INPUT GROUP COLUMN (OFFSET WITHOUT LABEL COLUMN) *@
                    <div class="col-md-8">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="@Html.IdFor(x => x.IsPersistent)" name="isPersistent" value="true"
                                       checked="@(Model != null && Model.IsPersistent ? "checked" : null)"
                                       ng-model="m.isPersistent"
                                       ng-init="m.isPersistent=@(Model != null ? Html.ValueFor(x => x.IsPersistent) : MvcHtmlString.Create("false"))" />
                                <input type="hidden" name="isPersistent" value="false" />
                                Keep me signed in after I close my browser
                            </label>
                        </div>
                    </div>
                </div>

                @* FORM SUBMIT BUTTON *@
                <div class="form-group">
                    <div class="col-md-4">
                        <input type="submit" class="btn btn-primary btn-lg btn-block" value="Sign In" ng-disabled="h.isSubmitDisabled" />
                    </div>
                </div>
            </form>

            <a href="@Url.Action(MVC.Authentication.SignIn())">Reload</a>

            <pre>
m = {{m | json}}
h.submitAttempted = {{ h.submitAttempted }}
h.userName.hasError() = {{ h.userName.hasError() }}
h.userName.hasSuccess() = {{ h.userName.hasSuccess() }}
h.userName.hasSpinner() = {{ h.userName.hasSpinner() }}
h.userName.serverError = {{ h.userName.serverError }}
f.userName.$error.required = {{ f.userName.$error.required }}
f.userName.$error.server = {{ f.userName.$error.server }}
h.password.serverError = {{ h.password.serverError }}
</pre>
        </div>
    </div>
</div>

@section scripts
{
    @*<script src="~/scripts/require.js" data-main="@Url.Content("~/app/security/sign-in/FormMain.js")"></script>*@
    <script src="~/scripts/angular.js"></script>
    <script src="~/app/_ng/directives/InputPreFormatterDirective.js"></script>
    <script src="~/app/_ng/directives/RemoveCssClassDirective.js"></script>
    <script src="~/app/_ng/directives/BootstrapPopover.js"></script>
    <script src="~/app/_ng/directives/FormHelperDirective.js"></script>
    <script src="~/app/_ng/directives/ModelHelperDirective.js"></script>
    <script src="~/app/_ng/directives/ServerErrorDirective.js"></script>
    <script src="~/app/_ng/directives/ServerValidateDirective.js"></script>
    <script src="~/app/_ng/directives/SubmitActionDirective.js"></script>
    <script src="~/app/_ng/modules/Tripod.js"></script>
    <script src="~/app/security/sign-in/FormModule.js"></script>
    <script src="~/app/security/sign-in/FormController.js"></script>
}
