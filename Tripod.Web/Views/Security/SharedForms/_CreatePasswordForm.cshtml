@using Tripod.Domain.Security
@model CreateLocalMembership

<form id="create_password_form"
      role="form"
      action="@Url.Action(MVC.UserPassword.CreateLocalMembership())"
      method="POST"
      novalidate
      class="form-horizontal"
      data-bind="submit: onSubmit">

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)
    @{
        const string inputCss = "input-lg";
        const string inputGroupCss = "input-group input-group-lg";
    }

    @* PASSWORD INPUT *@
    <div class="form-group form-group-lg @Html.BootstrapValidationCssClassFor(x => x.Password, true)"
         data-bind="css: passwordValidation.fieldCss">

        @* INPUT GROUP COLUMN *@
        <div class="col-md-6">
            @* SR LABEL *@
            <label for="@Html.IdFor(x => x.Password)" class="control-label sr-only">
                @LocalMembership.Constraints.PasswordLabel
            </label>
            @* INPUT GROUP *@
            <div class="@Html.CssClassWhenIsPost(inputGroupCss)" data-bind="css: passwordValidation.inputGroupCss('@inputGroupCss')">
                <input type="password"
                       class="form-control @inputCss"
                       placeholder="@LocalMembership.Constraints.PasswordLabel"
                       id="@Html.IdFor(x => x.Password)"
                       name="password"
                       data-bind="value: password, valueUpdate: 'afterkeydown'"
                       value="" />

                <!-- ko with: passwordValidation -->
                <span class="input-group-addon validation @Html.CssClassWhenIsNotPost("hide")" data-bind="css: { hide: hasNoAddOn }">
                    <i class="fa fa-fw fa-times error"></i>
                    <i class="fa fa-fw fa-spinner fa-spin spin-fast spinner"></i>
                    <i class="fa fa-fw fa-check success"></i>
                </span>
                <!-- /ko -->
            </div>
        </div>

        @* VALIDATION MESSAGES COLUMNS *@
        <div class="col-md-6 validation help-block help-block-horizontal-md hidden-sm hidden-xs">
            <span class="validation-tooltip" data-bind="jQuery: $passwordTooltip"></span>
            <span data-bind="visible: false">
                @Html.ValidationMessageFor(x => x.ConfirmPassword)
            </span>
        </div>
        <div class="col-md-6 validation help-block hidden-lg hidden-md">
            <span data-bind="validationMessage: password"></span>
            <span data-bind="visible: false">
                @Html.ValidationMessageFor(x => x.Password)
            </span>
        </div>
    </div>

    @* CONFIRM PASSWORD INPUT *@
    <div class="form-group form-group-lg @Html.BootstrapValidationCssClassFor(x => x.ConfirmPassword, true)" data-bind="css: confirmPasswordValidation.fieldCss">

        @* INPUT GROUP COLUMN *@
        <div class="col-md-6">
            @* SR LABEL *@
            <label for="@Html.IdFor(x => x.ConfirmPassword)" class="control-label sr-only">
                @LocalMembership.Constraints.PasswordConfirmationLabel
            </label>
            @* INPUT GROUP *@
            <div class="@Html.CssClassWhenIsPost(inputGroupCss)" data-bind="css: confirmPasswordValidation.inputGroupCss('@inputGroupCss')">
                <input type="password"
                       class="form-control @inputCss"
                       placeholder="@LocalMembership.Constraints.PasswordConfirmationLabel"
                       id="@Html.IdFor(x => x.ConfirmPassword)"
                       name="confirmPassword"
                       data-bind="value: confirmPassword, valueUpdate: 'afterkeydown'"
                       value=""
                       required />

                <!-- ko with: confirmPasswordValidation -->
                <span class="input-group-addon validation @Html.CssClassWhenIsNotPost("hide")" data-bind="css: { hide: hasNoAddOn }">
                    <i class="fa fa-fw fa-times error"></i>
                    <i class="fa fa-fw fa-spinner fa-spin spin-fast spinner"></i>
                    <i class="fa fa-fw fa-check success"></i>
                </span>
                <!-- /ko -->
            </div>
        </div>

        @* VALIDATION MESSAGES COLUMNS *@
        <div class="col-md-6 validation help-block help-block-horizontal-md hidden-sm hidden-xs">
            <span class="validation-tooltip" data-bind="jQuery: $confirmPasswordTooltip"></span>
            <span data-bind="visible: false">
                @Html.ValidationMessageFor(x => x.ConfirmPassword)
            </span>
        </div>
        <div class="col-md-6 validation help-block hidden-lg hidden-md">
            <span data-bind="validationMessage: confirmPassword"></span>
            <span data-bind="visible: false">
                @Html.ValidationMessageFor(x => x.ConfirmPassword)
            </span>
        </div>
    </div>

    @* FORM SUBMIT BUTTON *@
    <div class="form-group">
        <div class="col-md-12">
            @{
                var buttonClass = ViewData.ModelState.IsValid ? null : "btn-danger";
                var readyClass = ViewData.ModelState.IsValid ? null : "hide";
                var errorClass = ViewData.ModelState.IsValid ? "hide" : null;
            }
            <button type="submit" class="pull-left btn btn-primary btn-lg @buttonClass"
                    data-bind="disable: isSubmitDisabled, css: submitCss">
                <i class="fa fa-fw fa-key @readyClass" data-bind="css: { hide: !isSubmitReady()  }"></i>
                <i class="fa fa-fw fa-exclamation-triangle @errorClass" data-bind="css: { hide: !isSubmitError() }"></i>
                <i class="fa fa-fw fa-spinner fa-spin spin-fast" style="display: none;" data-bind="visible: isSubmitWaiting"></i>
                Create password
            </button>
            <div class="has-error pull-left nudge-right @errorClass" data-bind="css: { hide: !isSubmitError() }">
                <div class="help-block">
                    Could not create password due to above error(s).
                </div>
            </div>
        </div>
    </div>

</form>
