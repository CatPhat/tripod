@using System.Linq
@using Microsoft.Owin.Security
@model LoginSettingsModel

@{
    ViewBag.Title = "Logins";
}

@section styles
{
    <link href="~/content/security/user-settings.css" rel="stylesheet" />
}



@{ Html.RenderPartial(MVC.Users.Views._UserJumbotron, Model.UserView); }

<section class="user-settings row">

    @{ Html.RenderPartial(MVC.Security.Views._UserSettingsNav, new UserSettingsNavModel { IsLogins = true }); }

    <div class="col-md-8" role="main">

        @{ Html.RenderPartial(MVC.Shared.Views._AlertsTempData, new AlertRenderOptions()); }

        <h3 class="scalp">
            My logins
        </h3>

        @if (!Model.Logins.Any())
        {
            <p>
                You do not have any logins linked to your account.
            </p>
        }
        else
        {
            <p>
                You can sign in using any of the following accounts:
            </p>
            var google = Model.Logins.SingleOrDefault(x => x.Provider.Equals("Google", StringComparison.OrdinalIgnoreCase));
            var facebook = Model.Logins.SingleOrDefault(x => x.Provider.Equals("Facebook", StringComparison.OrdinalIgnoreCase));
            var twitter = Model.Logins.SingleOrDefault(x => x.Provider.Equals("Twitter", StringComparison.OrdinalIgnoreCase));
            <ul class="logins list-unstyled">
                @if (google != null)
                {
                    <li class="google clearfix">
                        <i class="provider"></i>
                        <span class="login-text">
                            Google
                        </span>
                        <div class="buttons">
                            <form method="POST" action="@Url.Action(MVC.UserLogins.Delete("Google", null))" class="form-inline" style="display: inline;">
                                @Html.AntiForgeryToken()
                                @Html.HttpMethodOverride(HttpVerbs.Delete)
                                <input type="hidden" name="providerKey" value="@google.Key" />
                                <button type="submit"
                                        class="btn btn-warning btn-sm"
                                        data-bootbox="confirm-form-submit"
                                        data-bootbox-class="modal-danger modal-buttons-left"
                                        data-bootbox-close="false"
                                        data-bootbox-title="Please confirm your intent"
                                        data-bootbox-message="Are you sure you want to delete the **Google** login?"
                                        data-bootbox-confirm="Yes, confirm delete"
                                        data-bootbox-confirm-class="btn-danger"
                                        data-bootbox-deny="No, cancel delete"
                                        data-bootbox-deny-class="btn-link">
                                    <i class="fa fa-times"></i>
                                    Unlink
                                </button>
                            </form>
                        </div>
                    </li>
                }
                @if (facebook != null)
                {
                    <li class="facebook clearfix">
                        <i class="provider"></i>
                        <span class="login-text">
                            Facebook
                        </span>
                        <div class="buttons">
                            <form method="POST" action="@Url.Action(MVC.UserLogins.Delete("Facebook", null))" class="form-inline" style="display: inline;">
                                @Html.AntiForgeryToken()
                                @Html.HttpMethodOverride(HttpVerbs.Delete)
                                <input type="hidden" name="providerKey" value="@facebook.Key" />
                                <button type="submit"
                                        class="btn btn-warning btn-sm"
                                        data-bootbox="confirm-form-submit"
                                        data-bootbox-class="modal-danger modal-buttons-left"
                                        data-bootbox-close="false"
                                        data-bootbox-title="Please confirm your intent"
                                        data-bootbox-message="Are you sure you want to delete the **Facebook** login?"
                                        data-bootbox-confirm="Yes, confirm delete"
                                        data-bootbox-confirm-class="btn-danger"
                                        data-bootbox-deny="No, cancel delete"
                                        data-bootbox-deny-class="btn-link">
                                    <i class="fa fa-times"></i>
                                    Unlink
                                </button>
                            </form>
                        </div>
                    </li>
                }
                @if (twitter != null)
                {
                    <li class="twitter clearfix">
                        <i class="provider"></i>
                        <span class="login-text">
                            Twitter
                        </span>
                        <div class="buttons">
                            <form method="POST" action="@Url.Action(MVC.UserLogins.Delete("Twitter", null))" class="form-inline" style="display: inline;">
                                @Html.AntiForgeryToken()
                                @Html.HttpMethodOverride(HttpVerbs.Delete)
                                <input type="hidden" name="providerKey" value="@twitter.Key" />
                                <button type="submit"
                                        class="btn btn-warning btn-sm"
                                        data-bootbox="confirm-form-submit"
                                        data-bootbox-class="modal-danger modal-buttons-left"
                                        data-bootbox-close="false"
                                        data-bootbox-title="Please confirm your intent"
                                        data-bootbox-message="Are you sure you want to delete the **Twitter** login?"
                                        data-bootbox-confirm="Yes, confirm delete"
                                        data-bootbox-confirm-class="btn-danger"
                                        data-bootbox-deny="No, cancel delete"
                                        data-bootbox-deny-class="btn-link">
                                    <i class="fa fa-times"></i>
                                    Unlink
                                </button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        }

        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes()
                .Where(x => Model.Logins.All(y => x.AuthenticationType != y.Provider))
                .ToArray();

            var googleProvider = loginProviders.SingleOrDefault(x => x.AuthenticationType.Equals("Google", StringComparison.OrdinalIgnoreCase));
            var facebookProvider = loginProviders.SingleOrDefault(x => x.AuthenticationType.Equals("Facebook", StringComparison.OrdinalIgnoreCase));
            var twitterProvider = loginProviders.SingleOrDefault(x => x.AuthenticationType.Equals("Twitter", StringComparison.OrdinalIgnoreCase));
        }
        @if (loginProviders.Any())
        {
            <h3>
                Add login
            </h3>

            <form action="@Url.Action(MVC.UserLogins.Post())" method="POST" class="providers row">

                @Html.AntiForgeryToken()

                <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />

                @if (googleProvider != null)
                {
                    <div class="col-sm-4">
                        @{ Html.RenderPartial(MVC.Security.Views._SignOnGoogleButton); }
                    </div>
                }
                @if (facebookProvider != null)
                {
                    <div class="col-sm-4">
                        @{ Html.RenderPartial(MVC.Security.Views._SignOnFacebookButton); }
                    </div>
                }
                @if (twitterProvider != null)
                {
                    <div class="col-sm-4">
                        @{ Html.RenderPartial(MVC.Security.Views._SignOnTwitterButton); }
                    </div>
                }
            </form>
        }
    </div>
</section>
