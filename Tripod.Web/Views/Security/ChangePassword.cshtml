@using System.Globalization
@using Tripod.Domain.Security
@model ChangeLocalPasswordModel

@{
    ViewBag.Title = string.Format("Update your {0}", LocalMembership.Constraints.PasswordLabel.ToLower());
}

@section styles
{
    <link href="~/content/security/user-settings.css" rel="stylesheet" />
}


@{ Html.RenderPartial(MVC.Users.Views._UserJumbotron, Model.UserView); }

<section class="user-settings row">

    @{ Html.RenderPartial(MVC.Security.Views._UserSettingsNav, new UserSettingsNavModel { IsPassword = true }); }

    <div class="col-md-8" role="main">

        @{ Html.RenderPartial(MVC.Shared.Views._AlertsTempData, new AlertRenderOptions()); }

        <h3 class="scalp">
            @ViewBag.Title
        </h3>

        <p>
            Did you tell someone else your password? Shame on you!<br />
            Better hurry up and change it before they hack into your account and collect all of your underpants profit...
        </p>

        @{ Html.RenderPartial(MVC.Security.Views._ChangePasswordForm, Model.Command); }

    </div>
</section>

@section scripts
{
    <script src="~/scripts/knockout-3.0.0.js"></script>
    <script src="~/scripts/knockout.mapping-latest.js"></script>
    <script src="~/scripts/knockout.validation.js"></script>
    <script src="~/app/_common/widgets/BindingHandlers.js"></script>
    <script src="~/app/_common/widgets/Spinner.js"></script>
    <script src="~/app/_common/widgets/ValidationState.js"></script>
    <script src="~/app/_common/widgets/ValidationRules.js"></script>
    <script src="~/app/_common/widgets/BootstrapTooltip.js"></script>
    <script src="~/app/security/ChangePasswordForm.js"></script>
    <script>
        App.Security.ChangePasswordForm.ViewModel.create({
            element: document.getElementById('change_password_form'),
            isPostBack: '@IsPost' == 'True',
            oldPasswordRequiredMessage: '@Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.OldPasswordLabel)',
            oldPasswordValidateUrl: '@Url.Action(MVC.UserPassword.ValidateChangeLocalPassword(null, "oldPassword"))',
            newPasswordRequiredMessage: '@Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.NewPasswordLabel)',
            newPasswordMinLength: parseInt('@LocalMembership.Constraints.PasswordMinLength'),
            newPasswordMaxLength: parseInt('@LocalMembership.Constraints.PasswordMaxLength'),
            //newPasswordMaxLength: 10,
            newPasswordMinLengthMessage: '@(Resources.Validation_MinLength
                .Replace("{PropertyName}", LocalMembership.Constraints.NewPasswordLabel)
                .Replace("{MinLength}", LocalMembership.Constraints.PasswordMinLength.ToString(CultureInfo.InvariantCulture)))',
            newPasswordMaxLengthMessage: '@(Resources.Validation_MaxLength
                .Replace("{PropertyName}", LocalMembership.Constraints.NewPasswordLabel)
                .Replace("{MaxLength}", LocalMembership.Constraints.PasswordMaxLength.ToString(CultureInfo.InvariantCulture)))',
            newPasswordValidateUrl: '@Url.Action(MVC.UserPassword.ValidateChangeLocalPassword(null, "newPassword"))',
            confirmPasswordRequiredMessage: '@Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.NewPasswordConfirmationLabel)',
            confirmPasswordEqualsMessage: '@(Resources.Validation_PasswordDoesNotEqualConfirmation
                .Replace("{PropertyName}", LocalMembership.Constraints.NewPasswordConfirmationLabel)
                .Replace("{PasswordLabel}", LocalMembership.Constraints.NewPasswordLabel.ToLower()))',
            confirmPasswordValidateUrl: '@Url.Action(MVC.UserPassword.ValidateChangeLocalPassword(null, "confirmPassword"))',
        });
    </script>
}
