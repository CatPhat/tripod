@using Tripod
@using Tripod.Domain.Security
@using Tripod.Web.Models
@using UserConstraints = Tripod.Domain.Security.User.Constraints

@model SignIn
@{
    ViewBag.Title = "Sign in";
}

<hr class="hr-md hr-space" />
<div class="row">
    <div class="col-sm-8 col-sm-offset-2">

        @* HEADING *@
        <h2>@ViewBag.Title.</h2>

        @* OAUTH PROVIDER BUTTONS FORM *@
        @{ Html.RenderPartial(MVC.Authentication.Views._OAuthSignInForm, new SignInOAuthButtonModel()); }

        <h4>
            Don't have any of the above acounts? <a href="@Url.Action(MVC.SignUpEmail.Index())">Sign up</a> to create an account with us.
        </h4>

        <hr class="hr-md hr-space" />
        <h4>
            Have an account with us? Sign in with your username or email address.
        </h4>

        @* SIGN IN FORM *@
        <div ng-app="sign-in-form" ng-controller="App.Security.SignIn.Form.Controller">
            <form role="form"
                  method="POST"
                  action="@Url.Action(MVC.SignIn.Index())"
                  novalidate
                  name="signInForm"
                  form-contrib="signInCtrb"
                  form-submitted="@IsPost"
                  class="form-horizontal">

                @Html.AntiForgeryToken()

                <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />

                @Html.ValidationSummary(true)
                @{
                    const string inputCss = "input-lg";
                    const string inputGroupCss = "input-group input-group-lg";
                }

                @* EMAIL ADDRESS INPUT *@
                <div class="form-group form-group-lg @Html.BootstrapValidationCssClassFor(x => x.UserName)"
                     remove-class="has-success has-error"
                     ng-class="signInCtrb.userName.feedbackCssClass()">

                    @* INPUT GROUP COLUMN *@
                    <div class="col-md-8">
                        @* SR LABEL *@
                        <label for="@Html.IdFor(x => x.UserName)" class="control-label sr-only">
                            @UserConstraints.NameLabel or @EmailAddress.Constraints.Label
                        </label>
                        <div class="@Html.CssClassWhenNotNullModel(inputGroupCss)"
                             remove-class="@inputGroupCss"
                             ng-class="signInCtrb.userName.inputGroupCssClass('lg')">
                            <input type="text"
                                   class="form-control @inputCss"
                                   placeholder="@UserConstraints.NameLabel or @EmailAddress.Constraints.Label"
                                   id="@Html.IdFor(x => x.UserName)"
                                   name="userName"
                                   value="@Html.ValueFor(x => x.UserName)"
                                   ng-init="vm.userName='@Html.ValueForJavaScriptString(x => x.UserName)'"
                                   ng-model="vm.userName"
                                   required
                                   model-contrib
                                   server-error="@Html.ValidationMessageTextFor(x => x.UserName)"
                                   server-validate="@Url.Action(MVC.SignIn.Validate(null, "userName"))"
                                   server-validate-throttle="400" />

                            <span class="input-group-addon validation @Html.CssClassWhenNullModel("hide")"
                                  remove-class="hide"
                                  ng-class="vm.userNameInputGroupValidationAddOnCssClass()">
                                <i class="fa fa-fw fa-asterisk default" title="This is a required field"></i>
                                <i class="fa fa-fw fa-times error"></i>
                                <i class="fa fa-fw fa-spinner fa-spin spin-fast spinner"></i>
                                <i class="fa fa-fw fa-exclamation-triangle warning"></i>
                                <i class="fa fa-fw fa-check success"></i>
                            </span>
                        </div>
                    </div>

                    @* VALIDATION MESSAGES COLUMNS *@
                    <div class="col-md-4 validation help-block help-block-horizontal-md hidden-sm hidden-xs">
                        <span tooltip="@Resources.notempty_error.Replace("{PropertyName}", string.Format("{0} or {1}", UserConstraints.NameLabel, EmailAddress.Constraints.Label))"
                              tooltip-toggle="vm.isUserNameRequiredError()"
                              tooltip-animation="false"
                              tooltip-placement="right"
                              class="validation-tooltip"></span>

                        <span tooltip="{{ signInCtrb.userName.error.server }}"
                              tooltip-toggle="vm.isUserNameServerError()"
                              tooltip-animation="false"
                              tooltip-placement="right"
                              class="validation-tooltip"></span>

                        <span ng-class="{ hide: true }">@Html.ValidationMessageFor(x => x.UserName)</span>
                    </div>
                    <div class="col-md-4 validation help-block hidden-md hidden-lg">
                        <span ng-show="vm.isUserNameRequiredError()" ng-cloak>
                            @Resources.notempty_error.Replace("{PropertyName}", string.Format("{0} or {1}", UserConstraints.NameLabel, EmailAddress.Constraints.Label))
                        </span>
                        <span ng-show="vm.isUserNameServerError()" ng-cloak>
                            {{ signInCtrb.userName.error.server }}
                        </span>
                        <span ng-class="{ hide: true }">
                            @Html.ValidationMessageFor(x => x.UserName)
                        </span>
                    </div>
                </div>

                @* PASSWORD INPUT *@
                <div class="form-group form-group-lg @Html.BootstrapValidationCssClassFor(x => x.Password)"
                     remove-class="has-success has-error"
                     ng-class="vm.passwordCssClass()">

                    @* INPUT GROUP COLUMN *@
                    <div class="col-md-8">
                        @* SR LABEL *@
                        <label for="@Html.IdFor(x => x.Password)" class="control-label sr-only">
                            @LocalMembership.Constraints.PasswordLabel
                        </label>
                        <div class="@Html.CssClassWhenInvalidFor(x => x.Password, inputGroupCss)"
                             remove-class="@inputGroupCss"
                             ng-class="vm.passwordInputGroupCssClass('@inputGroupCss')">
                            <input type="password"
                                   class="form-control @inputCss"
                                   placeholder="@LocalMembership.Constraints.PasswordLabel"
                                   id="@Html.IdFor(x => x.Password)"
                                   name="password"
                                   ng-model="vm.password"
                                   required
                                   model-contrib
                                   server-error="@Html.ValidationMessageTextFor(x => x.Password)" />

                            <span class="input-group-addon validation @Html.CssClassWhenValidFor(x => x.Password, "hide")"
                                  remove-class="hide"
                                  ng-class="vm.passwordInputGroupValidationAddOnCssClass()">
                                <i class="fa fa-fw fa-asterisk default" title="This is a required field"></i>
                                <i class="fa fa-fw fa-times error"></i>
                                <i class="fa fa-fw fa-exclamation-triangle warning"></i>
                                <i class="fa fa-fw fa-check success"></i>
                            </span>
                        </div>
                        <div class="help-block hidden-xs hidden-sm">
                            <a href="#">I forgot my password</a>
                        </div>
                    </div>

                    @* VALIDATION MESSAGES COLUMNS *@
                    <div class="col-md-4 validation help-block help-block-horizontal-md hidden-sm hidden-xs">
                        <span tooltip="@Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.PasswordLabel)"
                              tooltip-toggle="vm.isPasswordRequiredError()"
                              tooltip-animation="false"
                              tooltip-placement="right"
                              class="validation-tooltip"></span>

                        <span tooltip="{{ signInCtrb.password.error.server }}"
                              tooltip-toggle="vm.isPasswordServerError()"
                              tooltip-animation="false"
                              tooltip-placement="right"
                              class="validation-tooltip"></span>

                        <span ng-class="{ hide: true }">@Html.ValidationMessageFor(x => x.Password)</span>
                    </div>
                    <div class="col-md-4 validation help-block hidden-md hidden-lg">
                        <span ng-show="vm.isPasswordRequiredError()" ng-cloak>
                            @Resources.notempty_error.Replace("{PropertyName}", LocalMembership.Constraints.PasswordLabel)
                        </span>
                        <span ng-show="vm.isPasswordServerError()" ng-cloak>
                            {{ signInCtrb.password.error.server }}
                        </span>
                        <span ng-class="{ hide: true }">
                            @Html.ValidationMessageFor(x => x.Password)
                        </span>
                        <a href="#">I forgot my password</a>
                    </div>
                </div>

                @* REMEMBER ME CHECKBOX INPUT *@
                <div class="form-group">

                    @* INPUT GROUP COLUMN (OFFSET WITHOUT LABEL COLUMN) *@
                    <div class="col-md-8">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="@Html.IdFor(x => x.IsPersistent)" name="isPersistent" value="true"
                                       checked="@(Model != null && Model.IsPersistent ? "checked" : null)"
                                       ng-model="vm.isPersistent"
                                       ng-init="vm.isPersistent=@(Model != null ? Html.ValueFor(x => x.IsPersistent) : MvcHtmlString.Create("false"))" />
                                <input type="hidden" name="isPersistent" value="false" />
                                Keep me signed in after I close my browser
                            </label>
                        </div>
                    </div>
                </div>

                @* FORM SUBMIT BUTTON *@
                <div class="form-group">
                    <div class="col-md-4">
                        @{
                            var buttonClass = ViewData.ModelState.IsValid ? null : "btn-danger";
                            var readyClass = ViewData.ModelState.IsValid ? null : "hide";
                            var errorClass = ViewData.ModelState.IsValid ? "hide" : null;
                        }
                        <button type="submit" class="btn btn-primary btn-lg btn-block @buttonClass"
                                ng-class="vm.submitCssClass()"
                                ng-disabled="vm.isSubmitDisabled()"
                                remove-class="@buttonClass">
                            <i class="fa fa-fw fa-sign-in @readyClass"
                               remove-class="@readyClass"
                               ng-show="vm.isSubmitReady()"></i>
                            <i class="fa fa-fw fa-exclamation-triangle @errorClass"
                               remove-class="@errorClass"
                               ng-show="vm.isSubmitError()"></i>
                            <i class="fa fa-fw fa-spinner fa-spin spin-fast" ng-show="vm.isSubmitWaiting()" ng-cloak></i>
                            Sign in
                        </button>
                    </div>
                    <div class="col-md-8 has-error @errorClass"
                         remove-class="@errorClass"
                         ng-show="vm.isSubmitError()">
                        <div class="help-block">
                            Could not sign in due to above error(s).
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts
{
    @{ Html.RenderPartial(MVC.Scripts.Views.Angular); }
    <script src="~/app/security/sign-in/Form.js"></script>
}
