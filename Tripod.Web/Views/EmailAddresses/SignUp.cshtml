@using Tripod
@using Tripod.Domain.Security

@model SendConfirmationEmail

@{
    ViewBag.Title = "Sign up";
}

<h2>
    @ViewBag.Title.
</h2>

<div id="ng-app_test" ng-controller="FormController">
    <form name="f" action="@Url.Action(MVC.EmailAddresses.SignUp(null))" method="POST" class="form-horizontal" role="form"
          ng-t3-submit-action="submit()" ng-t3-submit-action-attempted="@(!ViewData.ModelState.IsValid)" novalidate>

        @Html.AntiForgeryToken()

        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary(true)

        @* EMAIL ADDRESS INPUT *@
        <div class="form-group @Html.BootstrapValidationCssClassFor(x => x.EmailAddress)"
             ng-t3-remove-class="has-success has-error"
             ng-class="{ 'has-success': t3.f.isGoodToGo(f.EmailAddress), 'has-error': t3.f.needsAttention(f.EmailAddress) }">

            @* LABEL COLUMN *@
            <label for="@Html.IdFor(x => x.EmailAddress)" class="col-md-2 control-label">
                @EmailAddress.Constraints.Label
            </label>

            @* INPUT GROUP COLUMN *@
            <div class="col-md-5">
                <div class="input-group">
                    <input type="email" placeholder="[example@somewhere.com]" class="form-control"
                           id="@Html.IdFor(x => x.EmailAddress)" name="@Html.NameFor(x => x.EmailAddress)" value="@Html.ValueFor(x => x.EmailAddress)"
                           ng-model="m.emailAddress" required
                           ng-init="m.emailAddress='@Html.ValueFor(x => x.EmailAddress)'" />
                    <span class="input-group-addon validation">
                        <i class="fa fa-fw fa-asterisk default" title="This is a required field"></i>
                        <i class="fa fa-fw fa-times error"></i>
                        <i class="fa fa-fw fa-exclamation-triangle warning"></i>
                        <i class="fa fa-fw fa-check success"></i>
                    </span>
                </div>
            </div>

            @* VALIDATION MESSAGES COLUMN *@
            <div class="col-md-5  help-block help-block-horizontal-lg">
                <span ng-show="!t3.f.needsAttention(f.EmailAddress) && f.EmailAddress.$pristine">
                    @Html.ValidationMessageFor(x => x.EmailAddress)
                </span>
                <span ng-show="t3.f.needsAttention(f.EmailAddress)" ng-cloak>
                    <span ng-show="f.EmailAddress.$error.required && !f.EmailAddress.$viewValue">
                        @Resources.notempty_error.Replace("{PropertyName}", @EmailAddress.Constraints.Label)
                    </span>
                    <span ng-show="f.EmailAddress.$error.email">
                        @Resources.email_error.Replace("{PropertyValue}", "{{ f.EmailAddress.$viewValue }}")
                    </span>
                    <span ng-show="f.EmailAddress.$error.server">
                        why {{ serverErrors.EmailAddress }} not
                    </span>
                </span>
            </div>
        </div>

        @* DISCLAIMER CHECKBOX INPUT *@
        <div class="form-group @Html.BootstrapValidationCssClassFor(x => x.IsExpectingEmail)"
             ng-t3-remove-class="has-success has-error"
             ng-class="{ 'has-success': t3.f.isGoodToGo(f.IsExpectingEmail), 'has-error': t3.f.needsAttention(f.IsExpectingEmail) }">

            @* INPUT GROUP COLUMN (OFFSET WITHOUT LABEL COLUMN) *@
            <div class="col-md-offset-2 col-md-5">
                <div class="input-group">
                    <div class="form-control">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="@Html.IdFor(x => x.IsExpectingEmail)" name="@Html.NameFor(x => x.IsExpectingEmail)" value="true"
                                       checked="@(Model != null && Model.IsExpectingEmail ? "checked" : null)"
                                       ng-model="m.isExpectingEmail" required
                                       ng-init="m.isExpectingEmail=@(Model != null ? Html.ValueFor(x => x.IsExpectingEmail) : MvcHtmlString.Create("false"))" />
                                <input type="hidden" name="@Html.NameFor(x => x.IsExpectingEmail)" value="false" />
                                Send an email to the above address so that I can confirm access to it.
                            </label>
                        </div>
                    </div>
                    <span class="input-group-addon validation">
                        <i class="fa fa-fw fa-asterisk default" title="This is a required field"></i>
                        <i class="fa fa-fw fa-times error"></i>
                        <i class="fa fa-fw fa-exclamation-triangle warning"></i>
                        <i class="fa fa-fw fa-check success"></i>
                    </span>
                </div>
            </div>

            @* VALIDATION MESSAGES COLUMN *@
            <div class="col-md-5 help-block help-block-horizontal-lg">
                <span ng-show="!t3.f.needsAttention(f.IsExpectingEmail) && f.IsExpectingEmail.$pristine">
                    @Html.ValidationMessageFor(x => x.IsExpectingEmail)
                </span>
                <span ng-show="t3.f.needsAttention(f.IsExpectingEmail)" ng-cloak>
                    <span ng-show="f.IsExpectingEmail.$error.required">
                        @Resources.Validation_SendConfirmationEmail_IsExpectingEmail.Replace("{PropertyName}", @EmailAddress.Constraints.Label.ToLower())
                    </span>
                </span>
            </div>
        </div>

        @* FORM SUBMIT BUTTON *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default btn-primary" value="Send confirmation email" ng-click="m.click()" ng-disabled="f.$invalid && t3.f.attempted" />
                <a href="@Url.Action(MVC.EmailAddresses.SignUp())">Reload</a>
            </div>
        </div>
    </form>
    @*<pre ng-cloak>
        m = {{m | json}}
        f = {{f | json}}
        f.EmailAddress.$viewValue = {{f.EmailAddress.$viewValue | json}}
        f.EmailAddress.$pristine = {{f.EmailAddress.$pristine | json}}
        f.IsExpectingEmail.$viewValue = {{f.IsExpectingEmail.$viewValue | json}}
        f.valid = {{ f.$valid | json}}
        m.hasSuccess(f.EmailAddress) = {{ m.hasSuccess(f.EmailAddress) }}
        m.hasError(f.EmailAddress) = {{ m.hasError(f.EmailAddress) }}
        f.EmailAddress.$invalid = {{ f.EmailAddress.$invalid }}
        f.EmailAddress.$dirty = {{ f.EmailAddress.$dirty }}
        t3.f.needsAttention(f.EmailAddress) = {{ t3.f.needsAttention(f.EmailAddress) }}
        f.IsExpectingEmail = {{ f.IsExpectingEmail }}
        t3.f.needsAttention(f.IsExpectingEmail) = {{ t3.f.needsAttention(f.IsExpectingEmail) }}
        t3.f.isGoodToGo(f.IsExpectingEmail) = {{ t3.f.needsAttention(f.IsExpectingEmail) }}
            </pre>*@
</div>

@section scripts {
    <script src="~/scripts/require.js" data-main="@Url.Content("~/app/security/confirm-email-address/FormMain.js")"></script>
}
